{"缓冲区": {"key": ["缓冲区"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [3], "所属章节": [8], "知识点描述": ["缓冲区是内存的临时存储区域，它的出现是为了加快内存的访问速度而设计的。对于经常访问的数据和指令来说，CPU 应该访问的是缓冲区而非内存。"]}, "DMA": {"key": ["DMA"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [2], "所属章节": [7], "知识点描述": ["直接内存访问，它是计算机系统的一项功能，它允许某些硬件系统能够独立于 CPU 访问内存。如果没有 DMA，当 CPU 执行输入/输出指令时，它通常在读取或写入操作的整个过程中都被完全占用，因此无法执行其他工作。使用 DMA 后，CPU 首先启动传输信号，然后在进行传输时执行其他操作，最后在完成操作后从 DMA 控制器（DMAC）接收中断。完成执行。"]}, "MMU": {"key": ["MMU"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [2], "所属章节": [5], "知识点描述": ["内存管理单元，有时称作分页内存管理单元。它是一种负责处理中央处理器（CPU）的内存访问请求的计算机硬件。它的功能包括虚拟地址到物理地址的转换（即虚拟内存管理）、内存保护、中央处理器高速缓存的控制等。"]}, "ROM": {"key": ["ROM"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [3], "所属章节": [4], "知识点描述": ["只读存储器是一种半导体存储器，其特性是一旦存储数据就无法改变或删除，且内容不会因为电源关闭而消失。在电子或电脑系统中，通常用以存储不需经常变更的程序或数据。"]}, "SSD": {"key": ["SSD"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [4], "所属章节": [4], "知识点描述": ["SSD(Solid State Disks)：固态硬盘，是一种主要以闪存作为永久性存储器的电脑存储设备。"]}, "虚拟地址": {"key": ["虚拟地址"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [2], "所属章节": [5], "知识点描述": ["虚拟内存是计算机系统内存管理的一种机制。它使得应用程序认为它拥有连续可用的内存（一个连续完整的地址空间），而实际上，它通常是被分隔成多个物理内存碎片，还有部分暂时存储在外部磁盘存储器上，在需要时进行数据交换。与没有使用虚拟内存技术的系统相比，使用这种技术的系统使得大型程序的编写变得更容易，对真正的物理内存（例如RAM）的使用也更有效率。"]}, "EEPROM": {"key": ["EEPROM"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [3], "所属章节": [4], "知识点描述": ["电可擦除可编程只读存储器，是一种可以通过电子方式多次复写的半导体存储设备。"]}, "闪存": {"key": ["闪存"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [4], "所属章节": [4], "知识点描述": ["是一种电子式可清除程序化只读存储器的形式，允许在操作中被多次擦或写的存储器。这种科技主要用于一般性数据存储，以及在电脑与其他数字产品间交换传输数据，如储存卡与U盘。"]}, "地址空间": {"key": ["地址空间"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [2], "所属章节": [6], "知识点描述": ["地址空间是内存中可供程序或进程使用的有效地址范围。也就是说，它是程序或进程可以访问的内存。存储器可以是物理的也可以是虚拟的，用于执行指令和存储数据。"]}, "稳定存储": {"key": ["稳定存储"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [4], "所属章节": [9], "知识点描述": ["它是计算机存储技术的一种分类，该技术可确保任何给定的写操作都具有原子性。"]}, "缓存命中": {"key": ["缓存命中"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [1], "所属章节": [4], "知识点描述": ["当应用程序或软件请求数据时，会首先发生缓存命中。首先，中央处理单元（CPU）在其最近的内存位置（通常是主缓存）中查找数据。如果在缓存中找到请求的数据，则将其视为缓存命中。"]}, "高速缓存行": {"key": ["高速缓存行"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [1], "所属章节": [4], "知识点描述": ["其实就是把高速缓存分割成了固定大小的块，其大小是以突发读或者突发写周期的大小为基础的。"]}, "RAID": {"key": ["RAID"], "property": ["subclassof"], "to_name": ["存储体系结构"], "重要程度": [4], "所属章节": [8], "知识点描述": ["全称是 Redundant Array of Inexpensive Disks ，廉价磁盘或驱动器的冗余阵列，它是一种数据存储虚拟化的技术，将多个物理磁盘驱动器组件组合成一个或多个逻辑单元，以实现数据冗余，改善性能。"]}, "内存映射I/O": {"key": ["内存映射I/O"], "property": ["subclassof"], "to_name": [". I/O port"], "重要程度": [1], "所属章节": [7], "知识点描述": ["内存映射的 I/O 使用相同的地址空间来寻址内存和 I/O 设备，也就是说，内存映射I/O 设备共享同一内存地址。"]}, "端口映射I/O": {"key": ["端口映射I/O"], "property": ["subclassof"], "to_name": [". I/O port"], "重要程度": [1], "所属章节": [7], "知识点描述": ["在 PMIO中，内存和I/O设备有各自的地址空间。 端口映射I/O通常使用一种特殊的CPU指令，专门执行I/O操作。"]}, "显卡": {"key": ["显卡"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [2], "所属章节": [9], "知识点描述": ["是个人电脑最基本组成部分之一，用途是将计算机系统所需要的显示信息进行转换驱动显示器，并向显示器提供逐行或隔行扫描信号，控制显示器的正确显示，是连接显示器和个人电脑主板的重要组件，是人机对话的重要设备之一。"]}, "位图": {"key": ["位图"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [2], "所属章节": [9], "知识点描述": ["在计算机中，位图是从某个域（例如，整数范围）到位的映射。也称为位数组或位图索引。"]}, "QR Code": {"key": ["QR Code"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [2], "所属章节": [9], "知识点描述": ["二维码的一种，它的全称是快速响应矩阵图码，能够快速响应。一般应用于手机读码操作，国内火车票上的二维码就是 QR 码。"]}, "假脱机": {"key": ["假脱机"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [4], "所属章节": [8], "知识点描述": ["假脱机是多程序的一种特殊形式，目的是在不同设备之间复制数据。 在现代系统中，通常用于计算机应用程序和慢速外围设备（例如打印机）之间的中介。"]}, "电阻式触摸屏": {"key": ["电阻式触摸屏"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [2], "所属章节": [9], "知识点描述": ["电阻式触摸屏基于施加到屏幕上的压力来工作。电阻屏由许多层组成。当按下屏幕时，外部的后面板将被推到下一层，下一层会感觉到施加了压力并记录了输入。电阻式触摸屏用途广泛，可以用手指，指甲，手写笔或任何其他物体进行操作。"]}, "电容式触摸屏": {"key": ["电容式触摸屏"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [2], "所属章节": [9], "知识点描述": ["电容式触摸屏通过感应物体（通常是指尖上的皮肤）的导电特性来工作。手机或智能手机上的电容屏通常具有玻璃表面，并且不依赖压力。当涉及到手势（如滑动和捏合）时，它比电阻式屏幕更具响应性。电容式触摸屏只能用手指触摸，而不能用普通的手写笔，手套或大多数其他物体来响应。"]}, "逻辑块寻址": {"key": ["逻辑块寻址"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [4], "所属章节": [8], "知识点描述": ["逻辑块寻址是一种通用方案，用于指定存储在计算机存储设备上的数据块的位置。"]}, "时钟": {"key": ["时钟"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [3], "所属章节": [9], "知识点描述": ["也被称为 timers。通常，时钟是指调节所有计算机功能的时序和速度的微芯片。芯片中是一个晶体，当通电时，晶体会以特定的频率振动。任何一台计算机能够执行的最短时间是一个时钟或时钟芯片的一次振动。"]}, "主设备编号": {"key": ["主设备编号"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [4], "所属章节": [8], "知识点描述": ["所有设备都有一个主，副号码。主号码是更大，更通用的类别（例如硬盘，输入/输出设备等），而次号码则更具体（即告诉设备连接到哪条总线）。"]}, "挂载": {"key": ["挂载"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [4], "所属章节": [8], "知识点描述": ["挂载是指操作系统会让存储在硬盘、CD-ROM 等资源设备上的目录和文件，通过文件系统能够让用户访问的过程。"]}, "设备独立性": {"key": ["设备独立性"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [1], "所属章节": [8], "知识点描述": ["我们编写访问任何设备的应用程序，不用事先指定特定的设备。比如你编写了一个能够从设备读入文件的应用程序，那么这个应用程序可以从硬盘、DVD 或者 USB 进行读入，不必再为每个设备定制应用程序。这其实就体现了设备独立性的概念。"]}, ". I/O port": {"key": [". I/O port"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [1], "所属章节": [7], "知识点描述": ["也被称为输入/输出端口，它是由软件用来与计算机上的硬件进行通信的内存地址。"]}, "轮询": {"key": ["轮询"], "property": ["subclassof"], "to_name": ["设备控制器"], "重要程度": [4], "所属章节": [8], "知识点描述": ["轮询是指通过客户端程序主动通过对每个设备进行访问来获得同步状态的过程。"]}, "设备控制器": {"key": ["设备控制器"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [1], "所属章节": [7], "知识点描述": ["设备控制器是处理 CPU 传入信号和传出信号的系统。设备通过插头和插座连接到计算机，并且插座连接到设备控制器。"]}, "存储体系结构": {"key": ["存储体系结构"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [3], "所属章节": [4], "知识点描述": ["顶层的存储器速度最高，但是容量最小，成本非常高，层级结构越向下，其访问效率越慢，容量越大，但是造价也就越便宜。"]}, "Java 虚拟机": {"key": ["Java 虚拟机"], "property": ["subclassof"], "to_name": ["虚拟机"], "重要程度": [2], "所属章节": [7], "知识点描述": ["Java虚拟机有自己完善的硬体架构，如处理器、堆栈、寄存器等，还具有相应的指令系统。JVM屏蔽了与具体操作系统平台相关的信息，使得Java程序只需生成在Java虚拟机上运行的目标代码（字节码），就可以在多种平台上不加修改地运行。"]}, "云计算": {"key": ["云计算"], "property": ["subclassof"], "to_name": ["云"], "重要程度": [2], "所属章节": [2], "知识点描述": ["云计算是计算机系统资源（尤其是数据存储和计算能力）的按需可用性，而无需用户直接进行主动管理。这个术语通常用于描述 Internet 上可供许多用户使用的数据中心。如今占主导地位的大型云通常具有从中央服务器分布在多个位置的功能。如果与用户的连接相对较近，则可以将其指定为边缘服务器。"]}, "半虚拟化": {"key": ["半虚拟化"], "property": ["subclassof"], "to_name": ["虚拟化技术"], "重要程度": [4], "所属章节": [10], "知识点描述": ["半虚拟化的目的不是呈现出一个和底层硬件一摸一样的虚拟机，而是提供一个软件接口，软件接口与硬件接口相似但又不完全一样。"]}, "全虚拟化": {"key": ["全虚拟化"], "property": ["subclassof"], "to_name": ["虚拟化技术"], "重要程度": [4], "所属章节": [10], "知识点描述": ["全虚拟化是硬件虚拟化的一种，允许未经修改的客操作系统隔离运行。对于全虚拟化，硬件特征会被映射到虚拟机上，这些特征包括完整的指令集、I/O操作、中断和内存管理等。"]}, "VMM": {"key": ["VMM"], "property": ["subclassof"], "to_name": ["虚拟化技术"], "重要程度": [2], "所属章节": [10], "知识点描述": ["也被称为 hypervisor，在同一个物理机器上创建出来多态虚拟机器的假象。"]}, "云": {"key": ["云"], "property": ["subclassof"], "to_name": ["虚拟化技术"], "重要程度": [4], "所属章节": [10], "知识点描述": ["云是目前虚拟机最重要、最时髦的玩法。"]}, "虚拟机": {"key": ["虚拟机"], "property": ["subclassof"], "to_name": ["虚拟化技术"], "重要程度": [2], "所属章节": [7], "知识点描述": ["在计算机科学中的体系结构里，是指一种特殊的软件，可以在计算机平台和终端用户之间创建一种环境，而终端用户则是基于虚拟机这个软件所创建的环境来操作其它软件。"]}, "虚拟化技术": {"key": ["虚拟化技术"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [4], "所属章节": [10], "知识点描述": ["是一种资源管理技术，将计算机的各种实体资源（CPU、内存、磁盘空间、网络适配器等），进行抽象、转换后呈现出来并可供分割、组合为一个或多个电脑配置环境。"]}, "工作目录": {"key": ["工作目录"], "property": ["subclassof"], "to_name": ["目录"], "重要程度": [1], "所属章节": [7], "知识点描述": ["它是一个计算机用语。用户在操作系统内所在的目录，用户可在此目录之下，用相对文件名访问文件。"]}, "根目录": {"key": ["根目录"], "property": ["subclassof"], "to_name": ["目录"], "重要程度": [1], "所属章节": [7], "知识点描述": ["根目录指的就是计算机系统中的顶层目录，比如 Windows 中的 C 盘和 D 盘，Linux 中的 /"]}, "路径": {"key": ["路径"], "property": ["subclassof"], "to_name": ["目录"], "重要程度": [1], "所属章节": [7], "知识点描述": ["路径是一种电脑文件或目录的名称的通用表现形式，它指向文件系统上的一个唯一位置。"]}, "文件描述符": {"key": ["文件描述符"], "property": ["subclassof"], "to_name": ["目录"], "重要程度": [1], "所属章节": [7], "知识点描述": ["文件描述符是计算机科学中的一个术语，是一个用于表述指向文件的引用的抽象化概念。"]}, "目标文件": {"key": ["目标文件"], "property": ["subclassof"], "to_name": ["目录"], "重要程度": [1], "所属章节": [7], "知识点描述": ["目标文件是包含目标代码的文件，这意味着通常无法直接执行的可重定位格式的机器代码。目标文件有多种格式，相同的目标代码可以打包在不同的目标文件中。目标文件也可以像共享库一样工作。"]}, "服务端": {"key": ["服务端"], "property": ["subclassof"], "to_name": ["主从架构"], "重要程度": [2], "所属章节": [7], "知识点描述": ["在计算中，服务器是为其他程序或设备提供功能的计算机程序或设备，称为服务端"]}, "客户端": {"key": ["客户端"], "property": ["subclassof"], "to_name": ["主从架构"], "重要程度": [2], "所属章节": [7], "知识点描述": ["客户端是访问服务器提供的服务的计算机硬件或软件。"]}, "主从模型": {"key": ["主从模型"], "property": ["subclassof"], "to_name": ["主从架构"], "重要程度": [4], "所属章节": [11], "知识点描述": ["主/从是一种不对称通信或控制的模型，其中一个设备进程控制一个或多个其他设备或进程并充当其通信中心。在某些系统中，从一组合格的设备中选择一个主设备，而其他设备则充当从设备的角色。"]}, "用户模式": {"key": ["用户模式"], "property": ["subclassof"], "to_name": ["主从架构"], "重要程度": [2], "所属章节": [1], "知识点描述": ["当操作系统运行用户应用程序（例如处理文本编辑器）时，系统处于用户模式。当应用程序请求操作系统的帮助或发生中断或系统调用时，就会发生从用户模式到内核模式的转换。在用户模式下，模式位设置为1。从用户模式切换到内核模式时，它从1更改为0。"]}, "内核模式": {"key": ["内核模式"], "property": ["subclassof"], "to_name": ["主从架构"], "重要程度": [2], "所属章节": [1], "知识点描述": ["通常也被称为 超级模式（supervisor mode），在内核模式下，正在执行的代码具有对底层硬件的完整且不受限制的访问。它可以执行任何 CPU 指令并引用任何内存地址。内核模式通常保留给操作系统的最低级别，最受信任的功能。内核模式下的崩溃是灾难性的；他们将停止整个计算机。超级用户模式是计算机开机时选择的自动模式。"]}, "主从架构": {"key": ["主从架构"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [2], "所属章节": [7], "知识点描述": ["主从式架构也称客户端/服务器架构、C/S 架构，是一种网络架构，它把客户端与服务器区分开来。每一个客户端软件的实例都可以向一个服务器或应用程序服务器发出请求。有很多不同类型的服务器，例如文件服务器、游戏服务器等。"]}, "活锁": {"key": ["活锁"], "property": ["subclassof"], "to_name": ["突发模式"], "重要程度": [4], "所属章节": [10], "知识点描述": ["活锁类似于死锁，不同之处在于，活锁中仅涉及进程的状态彼此之间不断变化，没有进展。举一个现实世界的例子，当两个人在狭窄的走廊里相遇时，就会发生活锁，每个人都试图通过移动到一边让对方通过而礼貌，但最终却没有任何进展就左右摇摆，因为他们总是同时移动相同的方式。"]}, "死锁": {"key": ["死锁"], "property": ["subclassof"], "to_name": ["突发模式"], "重要程度": [4], "所属章节": [9], "知识点描述": ["死锁常用于并发情况下，死锁 是一种状态，死锁中的每个成员都在等待另一个成员（包括其自身）采取行动。"]}, "不可抢占资源": {"key": ["不可抢占资源"], "property": ["subclassof"], "to_name": ["突发模式"], "重要程度": [4], "所属章节": [9], "知识点描述": ["与可抢占资源相反，如果资源被抢占后，会导致进程或任务出错。"]}, "可抢占资源": {"key": ["可抢占资源"], "property": ["subclassof"], "to_name": ["突发模式"], "重要程度": [4], "所属章节": [9], "知识点描述": ["可以从拥有它的进程中抢占而并不会产生任何副作用。"]}, "异步响应": {"key": ["异步响应"], "property": ["subclassof"], "to_name": ["突发模式"], "重要程度": [4], "所属章节": [8], "知识点描述": ["异步是由中断驱动的，CPU 不用等待每个操作的处理结果继而执行其他操作"]}, "同步阻塞": {"key": ["同步阻塞"], "property": ["subclassof"], "to_name": ["突发模式"], "重要程度": [4], "所属章节": [8], "知识点描述": ["同步是阻塞式的，CPU 必须等待同步的处理结果。"]}, "错误处理": {"key": ["错误处理"], "property": ["subclassof"], "to_name": ["突发模式"], "重要程度": [4], "所属章节": [8], "知识点描述": ["错误处理是指对软件应用程序中存在的错误情况的响应和恢复过程。"]}, "局域网": {"key": ["局域网"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [2], "所属章节": [11], "知识点描述": ["局域网（LAN）是一种计算机网络，可将住宅，学校，实验室，大学校园或办公大楼等有限区域内的计算机互连。"]}, "广域网": {"key": ["广域网"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [2], "所属章节": [11], "知识点描述": ["又称广域网、外网、公网。是连接不同地区局域网或城域网计算机通信的远程网。通常跨接很大的物理范围，所覆盖的范围从几十公里到几千公里，它能连接多个地区、城市和国家，或横跨几个洲并能提供远距离通信，形成国际性的远程网络。"]}, "以太网": {"key": ["以太网"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [2], "所属章节": [11], "知识点描述": ["以太网是一种计算机局域网的技术，它规定了包括物理层的连线、电子信号和介质访问层协议的内容。"]}, "桥接器": {"key": ["桥接器"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [2], "所属章节": [11], "知识点描述": ["当指代计算机时，网桥是连接两个 LAN（局域网）或同一 LAN 的两个网段的设备。与路由器不同，网桥是独立于协议的。他们转发数据包时无需分析和重新路由消息。"]}, "inode": {"key": ["inode"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [1], "所属章节": [7], "知识点描述": ["索引节点的缩写，索引节点是 UNIX 系统中包含的信息，其中包含有关每个文件的详细信息，例如节点，所有者，文件，文件位置等。"]}, "周期窃取": {"key": ["周期窃取"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [1], "所属章节": [7], "知识点描述": ["许多总线能够以两种模式操作：每次一字模式和块模式。一些 DMA 控制器也能够使用这两种方式进行操作。在前一个模式中，DMA 控制器请求传送一个字并得到这个字。如果 CPU 想要使用总线，它必须进行等待。设备可能会偷偷进入并且从 CPU 偷走一个总线周期，从而轻微的延迟 CPU。它类似于直接内存访问（DMA），允许I / O控制器在无需 CPU 干预的情况下读取或写入RAM。"]}, "中断向量表": {"key": ["中断向量表"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [1], "所属章节": [8], "知识点描述": ["用来形成相应的中断服务程序的入口地址或存放中断服务程序的首地址称为中断向量。中断向量表是中断向量的集合，中断向量是中断处理程序的地址。"]}, "系统检查点": {"key": ["系统检查点"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [4], "所属章节": [9], "知识点描述": ["系统检查点是操作系统（OS）的可启动实例。检查点是计算机在特定时间点的快照。"]}, "命令行界面": {"key": ["命令行界面"], "property": ["subclassof"], "to_name": ["主机"], "重要程度": [1], "所属章节": [6], "知识点描述": ["是在图形用户界面得到普及之前使用最为广泛的用户界面，它通常不支持鼠标，用户通过键盘输入指令，计算机接收到指令后，予以执行。"]}, "中断向量": {"key": ["中断向量"], "property": ["subclassof"], "to_name": ["进程"], "重要程度": [2], "所属章节": [5], "知识点描述": ["中断向量位于中断向量表中。中断向量表（IVT）是将中断处理程序列表与中断向量表中的中断请求列表相关联的数据结构。中断向量表的每个条目（称为中断向量）都是中断处理程序的地址。"]}, "主机": {"key": ["主机"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [2], "所属章节": [11], "知识点描述": ["在网络硬件中，主机又被称为网络主机，网络主机是连接到计算机网络的计算机或其他设备。主机可以充当服务器，向网络上的用户或其他主机提供信息资源，服务和应用程序。主机被分配至少一个网络地址。"]}, "大型机": {"key": ["大型机"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [1], "所属章节": [1], "知识点描述": ["大型机是一类计算机，通常以其大尺寸，存储量，处理能力和高度的可靠性而著称。它们主要由大型组织用于需要大量数据处理的关键任务应用程序。"]}, "图形处理器": {"key": ["图形处理器"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [1], "所属章节": [4], "知识点描述": ["又称显示核心、视觉处理器、显示芯片或绘图芯片；它是一种专门在个人电脑、工作站、游戏机和一些移动设备（如平板电脑、智能手机等）上运行绘图运算工作的微处理器。"]}, "超级用户": {"key": ["超级用户"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [1], "所属章节": [6], "知识点描述": ["也被称为管理员帐户，在计算机操作系统领域中指一种用于进行系统管理的特殊用户，其在系统中的实际名称也因系统而异，如 root、administrator 与supervisor。"]}, "实时迁移": {"key": ["实时迁移"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [4], "所属章节": [11], "知识点描述": ["实时迁移是指在不断开客户端或应用程序连接的情况下，在不同的物理机之间移动正在运行的虚拟机或应用程序的过程，一般经常采用的方式是内存预复制迁移。"]}, "进程间通信": {"key": ["进程间通信"], "property": ["subclassof"], "to_name": ["批处理"], "重要程度": [1], "所属章节": [6], "知识点描述": ["指至少两个进程或线程间传送数据或信号的一些技术或方法。"]}, "多线程": {"key": ["多线程"], "property": ["subclassof"], "to_name": ["批处理"], "重要程度": [2], "所属章节": [4], "知识点描述": ["是指从软件或者硬件上实现多个线程并发执行的技术。具有多线程能力的计算机因为有硬件支持而能够在同一时间执行多个线程，进而提升整体处理性能。"]}, "系统调用": {"key": ["系统调用"], "property": ["subclassof"], "to_name": ["批处理"], "重要程度": [2], "所属章节": [4], "知识点描述": ["指运行在用户空间的程序向操作系统内核请求需要更高权限运行的服务。系统调用提供用户程序与操作系统之间的接口。大多数系统交互式操作需求在内核态运行。如设备 IO 操作或者进程间通信。"]}, "忙等": {"key": ["忙等"], "property": ["subclassof"], "to_name": ["进程"], "重要程度": [1], "所属章节": [5], "知识点描述": ["在软件工程中，忙碌等待也称自旋，是一种以进程反复检查一个条件是否为真的条件，这种机制可能为检查键盘输入或某个锁是否可用。"]}, "中断": {"key": ["中断"], "property": ["subclassof"], "to_name": ["进程"], "重要程度": [2], "所属章节": [5], "知识点描述": ["通常，在接收到来自外围硬件（相对于中央处理器和内存）的异步信号，或来自软件的同步信号之后，处理器将会进行相应的硬件／软件处理。发出这样的信号称为进行中断请求（interrupt request，IRQ）。硬件中断导致处理器通过一个运行信息切换（context switch）来保存执行状态（以程序计数器和程序状态字等寄存器信息为主）；软件中断则通常作为 CPU 指令集中的一个指令，以可编程的方式直接指示这种运行信息切换，并将处理导向一段中断处理代码。中断在计算机多任务处理，尤其是即时系统中尤为有用。"]}, "进程表": {"key": ["进程表"], "property": ["subclassof"], "to_name": ["进程"], "重要程度": [1], "所属章节": [6], "知识点描述": ["进程表是操作系统维护的数据结构，该表中的每个条目（通常称为上下文块）均包含有关进程的信息，例如进程名称和状态，优先级，寄存器以及它可能正在等待的信号灯。"]}, "进程": {"key": ["进程"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [1], "所属章节": [6], "知识点描述": ["程序本身只是指令、数据及其组织形式的描述，进程才是程序（那些指令和数据）的真正运行实例。若进程有可能与同一个程序相关系，且每个进程皆可以同步（循序）或异步的方式独立运行。"]}, "L1 cache": {"key": ["L1 cache"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [1], "所属章节": [4], "知识点描述": ["一级缓存是 CPU 芯片中内置的存储库。L1缓存也称为主缓存，是计算机中最快的内存，并且最接近处理器。"]}, "L2 cache": {"key": ["L2 cache"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [1], "所属章节": [4], "知识点描述": ["二级缓存存储库，内置在 CPU 芯片中，包装在同一模块中，或者建在主板上。L2 高速缓存提供给 L1 高速缓存，后者提供给处理器。L2 内存比 L1 内存慢。"]}, "L3 cache": {"key": ["L3 cache"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [1], "所属章节": [4], "知识点描述": ["三级缓存内置在主板上或CPU模块内的存储库。L3 高速缓存为 L2 高速缓存提供数据，其内存通常比 L2 内存慢，但比主内存快。L3 高速缓存提供给 L2 高速缓存，后者又提供给 L1 高速缓存，后者又提供给处理器。"]}, "RAM": {"key": ["RAM"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [3], "所属章节": [4], "知识点描述": ["随机存取存储器，也叫主存，是与 CPU 直接交换数据的内部存储器。它可以随时读写，而且速度很快，通常作为操作系统或其他正在运行中的程序的临时数据存储介质。RAM工作时可以随时从任何一个指定的地址写入（存入）或读出（取出）信息。它与 ROM 的最大区别是数据的易失性，即一旦断电所存储的数据将随之丢失。RAM 在计算机和数字系统中用来暂时存储程序、数据和中间结果。"]}, "context switch": {"key": ["context switch"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [1], "所属章节": [5], "知识点描述": ["上下文切换，又称环境切换。是一个存储和重建 CPU 状态的机制。要交换 CPU 上的进程时，必需先行存储当前进程的状态，然后再将进程状态读回 CPU 中。"]}, "程序状态字": {"key": ["程序状态字"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [1], "所属章节": [4], "知识点描述": ["它是由操作系统维护的8个字节（或64位）长的数据的集合。它跟踪系统的当前状态。"]}, "程序计数器": {"key": ["程序计数器"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [2], "所属章节": [3], "知识点描述": ["程序计数器 是一个 CPU 中的寄存器，用于指示计算机在其程序序列中的位置。"]}, "超标量": {"key": ["超标量"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [1], "所属章节": [4], "知识点描述": ["超标量 CPU 架构是指在一颗处理器内核中实行了指令级并发的一类并发运算。这种技术能够在相同的CPU主频下实现更高的 CPU 流量。"]}, "流水线": {"key": ["流水线"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [1], "所属章节": [4], "知识点描述": ["在计算世界中，管道是一组串联连接的数据处理元素，其中一个元素的输出是下一个元素的输入。流水线的元素通常以并行或按时间分割的方式执行。通常在元素之间插入一定数量的缓冲区存储。"]}, "堆栈寄存器": {"key": ["堆栈寄存器"], "property": ["subclassof"], "to_name": ["CPU 核心"], "重要程度": [2], "所属章节": [3], "知识点描述": ["堆栈寄存器(stack pointer)：堆栈寄存器是计算机 CPU 中的寄存器，其目的是跟踪调用堆栈。"]}, "CPU 核心": {"key": ["CPU 核心"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [2], "所属章节": [4], "知识点描述": ["它是 CPU 的大脑，它接收指令，并执行计算或运算以满足这些指令。一个 CPU 可以有多个内核。"]}, "SATA": {"key": ["SATA"], "property": ["subclassof"], "to_name": ["总线(Bus)"], "重要程度": [1], "所属章节": [1], "知识点描述": ["串行 ATA (Serial Advanced Technology Attachment)，它是一种电脑总线，负责主板和大容量存储设备（如硬盘及光盘驱动器）之间的数据传输，主要用于个人电脑。"]}, "总线(Bus)": {"key": ["总线(Bus)"], "property": ["subclassof"], "to_name": ["计算机架构"], "重要程度": [4], "所属章节": [5], "知识点描述": ["总线（Bus）是指计算机组件间规范化的交换数据的方式，即以一种通用的方式为各组件提供数据传送和控制逻辑。"]}, "X Window System": {"key": ["X Window System"], "property": ["subclassof"], "to_name": ["x86"], "重要程度": [1], "所属章节": [3], "知识点描述": [" 窗口系统（X11，或简称X）是用于位图显示的窗口系统，在类 UNIX 操作系统上很常见。"]}, "x86": {"key": ["x86"], "property": ["subclassof"], "to_name": ["计算机架构"], "重要程度": [2], "所属章节": [3], "知识点描述": ["x86是一整套指令集体系结构，由 Intel 最初基于 Intel 8086 微处理器及其 8088 变体开发。采用内存分段作为解决方案，用于处理比普通 16 位地址可以覆盖的更多内存。32 位是 x86 默认的位数，除此之外，还有一个 x86-64 位，是x86架构的 64 位拓展，向后兼容于 16 位及 32 位的 x86架构。"]}, "计算机架构": {"key": ["计算机架构"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [4], "所属章节": [1], "知识点描述": ["在计算机工程中，计算机体系结构是描述计算机系统功能，组织和实现的一组规则和方法。它主要包括指令集、内存管理、I/O 和总线结构"]}, "BSD": {"key": ["BSD"], "property": ["subclassof"], "to_name": ["UNIX 操作系统"], "重要程度": [1], "所属章节": [2], "知识点描述": ["UNIX 的衍生系统。"]}, "MINIX": {"key": ["MINIX"], "property": ["subclassof"], "to_name": ["UNIX 操作系统"], "重要程度": [1], "所属章节": [2], "知识点描述": ["Minix，是一个迷你版本的类 UNIX 操作系统。"]}, "POSIX": {"key": ["POSIX"], "property": ["subclassof"], "to_name": ["UNIX 操作系统"], "重要程度": [1], "所属章节": [2], "知识点描述": ["可移植操作系统接口，是 IEEE 为要在各种 UNIX 操作系统上运行软件，而定义API的一系列互相关联的标准的总称。"]}, "UNIX System V": {"key": ["UNIX System V"], "property": ["subclassof"], "to_name": ["UNIX 操作系统"], "重要程度": [1], "所属章节": [2], "知识点描述": ["是 UNIX 操作系统的一个分支。"]}, "DOS": {"key": ["DOS"], "property": ["type"], "to_name": ["MS-DOS"], "重要程度": [4], "所属章节": [2], "知识点描述": ["DOS (Disk Operating System)：磁盘操作系统（缩写为DOS）是可以使用磁盘存储设备（例如软盘，硬盘驱动器或光盘）的计算机操作系统。"]}, "操作系统": {"key": ["操作系统"], "property": ["type"], "to_name": ["UNIX 操作系统"], "重要程度": [4], "所属章节": [1], "知识点描述": ["操作系统（Operating System，OS）：是管理计算机硬件与软件资源的系统软件，同时也是计算机系统的内核与基石。操作系统需要处理管理与配置内存、决定系统资源供需的优先次序、控制输入与输出设备、操作网络与管理文件系统等基本事务。操作系统也提供一个让用户与系统交互的操作界面。"]}, "Gnome": {"key": ["Gnome"], "property": ["subclassof"], "to_name": ["Linux"], "重要程度": [1], "所属章节": [3], "知识点描述": ["GNOME 是一个完全由自由软件组成的桌面环境。它的目标操作系统是Linux，但是大部分的 BSD 系统亦支持 GNOME。"]}, "USB": {"key": ["USB"], "property": ["subclassof"], "to_name": ["驱动程序"], "重要程度": [1], "所属章节": [6], "知识点描述": ["USB(Universal Serial Bus)：是连接计算机系统与外部设备的一种串口总线标准，也是一种输入输出接口的技术规范，被广泛地应用于个人电脑和移动设备等信息通讯产品，并扩展至摄影器材、数字电视（机顶盒）、游戏机等其它相关领域。"]}, "BIOS": {"key": ["BIOS"], "property": ["subclassof"], "to_name": ["驱动程序"], "重要程度": [1], "所属章节": [6], "知识点描述": [" BIOS(Basic Input Output System)：是在通电引导阶段运行硬件初始化，以及为操作系统提供运行时服务的固件。它是开机时运行的第一个软件。"]}, "DMI": {"key": ["DMI"], "property": ["subclassof"], "to_name": ["驱动程序"], "重要程度": [1], "所属章节": [5], "知识点描述": ["直接媒体接口，是英特尔专用的总线，用于电脑主板上南桥芯片和北桥芯片之间的连接。"]}, "PCIe": {"key": ["PCIe"], "property": ["subclassof"], "to_name": ["驱动程序"], "重要程度": [1], "所属章节": [5], "知识点描述": ["官方简称PCIe，是计算机总线的一个重要分支，它沿用现有的PCI编程概念及信号标准，并且构建了更加高速的串行通信系统标准。"]}, "GDI": {"key": ["GDI"], "property": ["subclassof"], "to_name": ["驱动程序"], "重要程度": [2], "所属章节": [9], "知识点描述": ["图形接口，是微软视窗系统提供的应用程序接口，也是其用来表征图形对象、将图形对象传送给诸如显示器、打印机之类输出设备的核心组件。"]}, "GUI": {"key": ["GUI"], "property": ["subclassof"], "to_name": ["驱动程序"], "重要程度": [4], "所属章节": [1], "知识点描述": ["GUI (Graphical User Interface)：是一种用户界面，允许用户通过图形图标和音频指示符与电子设备进行交互。"]}, "shell": {"key": ["shell"], "property": ["subclassof"], "to_name": ["驱动程序"], "重要程度": [3], "所属章节": [1], "知识点描述": ["它是一个程序，可从键盘获取命令并将其提供给操作系统以执行。在过去，它是类似 Unix 的系统上唯一可用的用户界面。如今，除了命令行界面（CLI）外，我们还具有图形用户界面（GUI）。"]}, "驱动程序": {"key": ["驱动程序"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [2], "所属章节": [5], "知识点描述": ["设备驱动程序，简称驱动程序（driver），是一个允许高级别电脑软件与硬件交互的程序，这种程序创建了一个硬件与硬件，或硬件与软件沟通的接口，经由主板上的总线或其它沟通子系统与硬件形成连接的机制，这样使得硬件设备上的数据交换成为可能。"]}, "SSF": {"key": ["SSF"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [3], "所属章节": [8], "知识点描述": ["最短路径优先算法，这是对先进先出算法的改进，这种算法因为减少了总的磁臂运动，从而缩短了平均响应时间。"]}, "沙盒": {"key": ["沙盒"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [2], "所属章节": [10], "知识点描述": ["沙盒是一种软件管理策略，可将应用程序与关键系统资源和其他程序隔离。它提供了一层额外的安全保护，可防止恶意软件或有害应用程序对你的系统造成负面影响。"]}, "解释器": {"key": ["解释器"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [2], "所属章节": [10], "知识点描述": ["解释器是一种程序，能够把编程语言一行一行解释运行。每次运行程序时都要先转成另一种语言再运行，因此解释器的程序运行速度比较缓慢。它不会一次把整个程序翻译出来，而是每翻译一行程序叙述就立刻运行，然后再翻译下一行，再运行，如此不停地进行下去。"]}, "输入输出内存管理单元": {"key": ["输入输出内存管理单元"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [4], "所属章节": [10], "知识点描述": ["在计算机中，输入输出内存管理单元（IOMMU）是将直接内存访问（DMA）I / O 总线连接到主存的内存管理单元（MMU）。"]}, "平台即服务": {"key": ["平台即服务"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [4], "所属章节": [10], "知识点描述": ["平台即服务（PaaS）或应用程序平台即服务（aPaaS）或基于平台的服务是云计算服务的一种，它提供了一个平台，使客户可以开发，运行和管理应用程序，而无需构建和维护该应用程序。"]}, "软件即服务": {"key": ["软件即服务"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [4], "所属章节": [10], "知识点描述": ["它是一个提供特定软件服务访问的平台，是一种软件许可和交付模型，在该模型中，软件是基于订阅许可的，并且是集中托管的。"]}, "Windows NT": {"key": ["Windows NT"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [1], "所属章节": [2], "知识点描述": ["是美国微软公司 1993 年推出的纯 32 位操作系统核心。"]}, "FreeBSD": {"key": ["FreeBSD"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [1], "所属章节": [3], "知识点描述": ["FreeBSD 是一个类 UNIX 的操作系统，也是 FreeBSD 项目的发展成果。"]}, "数字版权管理（DRM）": {"key": ["数字版权管理（DRM）"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [1], "所属章节": [3], "知识点描述": ["他是工具或技术保护措施（TPM）是一组访问控制技术，用于限制对专有硬件和受版权保护的作品的使用。"]}, "Service Pack(SP)": {"key": ["Service Pack(SP)"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [1], "所属章节": [3], "知识点描述": ["是程序的更新、修复和（或）增强的集合，以一个独立的安装包的形式发布。许多公司，如微软或Autodesk，通常在为某一程序而做的修补程序达到一定数量时，就发布一个Service Pack。"]}, "复用": {"key": ["复用"], "property": ["subclassof"], "to_name": ["基础设施即服务"], "重要程度": [1], "所属章节": [1], "知识点描述": ["也称为共享，在操作系统中主要指示了时间和空间的管理。对资源进行复用时，不同的程序或用户轮流使用它。他们中的第一个开始使用资源，然后再使用另一个，依此类推。"]}}