{"计算机系统概述": {"key": ["计算机系统概述"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [3], "所属章节": [1], "知识点描述": [NaN]}, "计算机系统层次结构": {"key": ["计算机系统层次结构"], "property": ["subclassof"], "to_name": ["计算机系统概述"], "重要程度": [2], "所属章节": [1], "知识点描述": [NaN]}, "计算机性能指标": {"key": ["计算机性能指标"], "property": ["subclassof"], "to_name": ["计算机系统概述"], "重要程度": [3], "所属章节": [1], "知识点描述": ["计算机功能的强弱或性能的好坏，不是由某项指标决定的，而是由它的系统结构、指令系统、硬件组成、软件配置等多方面的因素综合决定的。"]}, "软件系统": {"key": ["软件系统"], "property": ["subclassof"], "to_name": ["计算机系统层次结构"], "重要程度": [4], "所属章节": [1], "知识点描述": ["软件系统(Software Systems)是指由系统软件、支撑软件和应用软件组成的计算机软件系统，它是计算机系统中由软件组成的部分。"]}, "硬件系统": {"key": ["硬件系统"], "property": ["subclassof"], "to_name": ["计算机系统层次结构"], "重要程度": [4], "所属章节": [1], "知识点描述": ["硬件系统是指构成计算机的物理设备，即由机械、光、电、磁器件构成的具有计算、控制、存储、输入和输出功能的实体部件。如CPU、存储器、软盘驱动器、硬盘驱动器、光盘驱动器、主机板、各种卡及整机中的主机、显示器、打印机、绘图仪、调制解调器等等，整机硬件也称“硬设备”。 "]}, "吞吐量": {"key": ["吞吐量"], "property": ["type"], "to_name": ["计算机性能指标"], "重要程度": [3], "所属章节": [1], "知识点描述": ["吞吐量是指对网络、设备、端口、虚电路或其他设施，单位时间内成功地传送数据的数量（以比特、字节、分组等测量）。"]}, "响应时间": {"key": ["响应时间"], "property": ["type"], "to_name": ["计算机性能指标"], "重要程度": [3], "所属章节": [1], "知识点描述": ["响应时间是一个计算机，显示器成像等多个领域的概念，在网络上，指从空载到负载发生一个步进值的变化时，传感器的响应时间。"]}, "CPU时钟周期": {"key": ["CPU时钟周期"], "property": ["type"], "to_name": ["计算机性能指标"], "重要程度": [3], "所属章节": [1], "知识点描述": ["通常为节拍脉冲或T周期，即主频的倒数，它是CPU中最小的时间单位，每个动作至少需要一个时钟周期。"]}, "主频": {"key": ["主频"], "property": ["type"], "to_name": ["计算机性能指标"], "重要程度": [3], "所属章节": [1], "知识点描述": ["主频即CPU的时钟频率，计算机的操作在时钟信号的控制下分步执行，每个时钟信号周期完成一步操作，时钟频率的高低在很大程度上反映了CPU速度的快慢。"]}, "数据表示": {"key": ["数据表示"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [3], "所属章节": [6], "知识点描述": ["数据表示是指被交换数据项的语法，传输期间采用的特定形式，计算机间整数、字符和文件的转换。"]}, "浮点数的表示": {"key": ["浮点数的表示"], "property": ["subclassof"], "to_name": ["数据表示"], "重要程度": [2], "所属章节": [6], "知识点描述": ["浮点数，顾名思义，就是小数点不固定的数。计算机中，根据小数点位置是否固定，分为两种数据格式，一种就是这个，小数点不固定，另一种是定点数，小数点是固定的。"]}, "数制与编码": {"key": ["数制与编码"], "property": ["subclassof"], "to_name": ["数据表示"], "重要程度": [2], "所属章节": [6], "知识点描述": ["“数制”就是“数据进制”的简称，是指数据的进位计数规则，又称“进位计数制”，简称“进制”。常见：十进制，二进制等。编码是信息从一种形式或格式转换为另一种形式的过程，也称为计算机编程语言的代码简称编码。"]}, "定点数的表示": {"key": ["定点数的表示"], "property": ["subclassof"], "to_name": ["数据表示"], "重要程度": [2], "所属章节": [6], "知识点描述": ["定点数指小数点在数中位置固定不变的数。定点数分为定点整数和定点小数，由于小数点位置固定不变，所以存储时小数点不进行存储，按照约定的位置计算数值。原理上讲，小数点的位置可以位于任何位置，但通常将定点数表示成纯小数或纯整数。"]}, "指令系统": {"key": ["指令系统"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [2], "所属章节": [7], "知识点描述": ["指令系统是计算机硬件的语言系统，也叫机器语言，指机器所具有的全部指令的集合，它是软件和硬件的主要界面，反映了计算机所拥有的基本功能。"]}, "指令寻址方式": {"key": ["指令寻址方式"], "property": ["subclassof"], "to_name": ["指令系统"], "重要程度": [4], "所属章节": [7], "知识点描述": ["寻址方式就是处理器根据指令中给出的地址信息来寻找有效地址的方式，是确定本条指令的数据地址以及下一条要执行的指令地址的方法。"]}, "CISC和RISC": {"key": ["CISC和RISC"], "property": ["subclassof"], "to_name": ["指令系统"], "重要程度": [2], "所属章节": [7], "知识点描述": ["RISC（reduced instruction set computer，精简指令集计算机）是一种执行较少类型计算机指令的微处理器.这样一来，它能够以更快的速度执行操作。因为计算机执行每个指令类型都需要额外的晶体管和电路元件，计算机指令集越大就会使微处理器更复杂，执行操作也会更慢。CISC(complexinstruction set computer,复杂指令集计算机）　除了RISC，任何全指令集计算机都使用的是复杂指令集计算（CISC）。"]}, "直接寻址": {"key": ["直接寻址"], "property": ["subclassof"], "to_name": ["指令寻址方式"], "重要程度": [2], "所属章节": [7], "知识点描述": ["直接寻址是一种基本的寻址方法，其特点是：在指令格式的地址的字段中直接指出操作数在内存的地址。由于操作数的地址直接给出而不需要经过某种变换，所以称这种寻址方式为直接寻址方式。"]}, "顺序寻址": {"key": ["顺序寻址"], "property": ["subclassof"], "to_name": ["指令寻址方式"], "重要程度": [2], "所属章节": [7], "知识点描述": ["?由于指令地址在内存中按顺序安排，当执行一段程序时，通常是一条指令接一条指令地顺序进行。也就是说，从存储器取出第1条指令，然后执行这条指令;接着从存储器取出第2条指令，再执行第二条指令;接着再取出第3条指令。"]}, "隐含寻址": {"key": ["隐含寻址"], "property": ["subclassof"], "to_name": ["指令寻址方式"], "重要程度": [2], "所属章节": [7], "知识点描述": ["这种类型的指令，不是明显地给出操作数的地址。而是在指令中隐含着操作数的地址。例如，单地址的指令格式，就不明显地在地址字段中指出第2操作数的地址，而是规定累加寄存器AC作为第2操作数地址。指令格式明显指出的仅是第1操作数的地址D。因此，累加寄存器AC对单地址指令格式来说是隐含地址。 如:DAA 。"]}, "立即寻址": {"key": ["立即寻址"], "property": ["type"], "to_name": ["指令寻址方式"], "重要程度": [2], "所属章节": [7], "知识点描述": ["立即寻址方式的目的就是将操作数紧跟在操作码后面，与操作码一起放在指令代码段中，在程序运行时，程序直接调用该操作数，而不需要到其他地址单元中去取相应的操作数，上述的写在指令中的操作数也称作立即数。"]}, "跳跃寻址": {"key": ["跳跃寻址"], "property": ["type"], "to_name": ["指令寻址方式"], "重要程度": [2], "所属章节": [7], "知识点描述": ["当程序转移执行的顺序时，指令的寻址就采取跳跃寻址方式。所谓跳跃，是指下条指令的地址码不是由程序计数器给出，而是由本条指令给出。注意，程序跳跃后，按新的指令地址开始顺序执行。因此，程序计数器的内容也必须相应改变，以便及时跟踪新的指令地址。"]}, "寄存器寻址": {"key": ["寄存器寻址"], "property": ["type"], "to_name": ["指令寻址方式"], "重要程度": [4], "所属章节": [7], "知识点描述": ["寄存器寻址是指操作数在寄存器中，由指令操作码中的rrr三位的值和PSW中RS1及RS0的状态，选中某个工作寄存器区的某个寄存器，然后进行相应的指令操作。"]}, "间接寻址": {"key": ["间接寻址"], "property": ["type"], "to_name": ["指令寻址方式"], "重要程度": [2], "所属章节": [7], "知识点描述": ["间接寻址是相对直接寻址而言的，在间接寻址的情况下，指令地址字段中的形式地址不是操作数的真正地址，而是操作数地址的指示器，或者说此形式地址单元的内容才是操作数的有效地址。"]}, "存储系统": {"key": ["存储系统"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [4], "所属章节": [4], "知识点描述": ["存储系统是指计算机中由存放程序和数据的各种存储设备、控制部件及管理信息调度的设备（硬件）和算法（软件）所组成的系统。"]}, "半导体随即存储器": {"key": ["半导体随即存储器"], "property": ["type"], "to_name": ["存储系统"], "重要程度": [2], "所属章节": [4], "知识点描述": ["RAM（Random-Access Memory，随机访问内存）包括SRAM和DRAM两大类。 SRAM在存储结构上以寄存器为基本单元，访问速度快，是各类半导体存储器中读写速度最快的；同DRAM相比无需刷新，但存储密度较低，价格也十分昂贵，通常用作CPU的一级和二级缓存(L1/L2)。另外SRAM具有易失性，掉电后信息丢失"]}, "存储器的层次结构": {"key": ["存储器的层次结构"], "property": ["subclassof"], "to_name": ["存储系统"], "重要程度": [4], "所属章节": [4], "知识点描述": ["存储器结构，指的是储存器的组成。"]}, "多模块存储器": {"key": ["多模块存储器"], "property": ["type"], "to_name": ["存储系统"], "重要程度": [2], "所属章节": [4], "知识点描述": ["为了解决CPU与主存储器之间的速度匹配问题，在高速存储器中，普遍采用并行主存系统。即利用类似存储器扩展(位扩展、字扩展、字位扩展)的方法，将n个字长为W位的存储器并行连接，构建一个更大的存储器。并行主存有单体多字方式、多体并行方式和多体交叉方式。"]}, "高速缓冲存储器": {"key": ["高速缓冲存储器"], "property": ["type"], "to_name": ["存储系统"], "重要程度": [4], "所属章节": [4], "知识点描述": ["高速缓冲存储器（Cache）其原始意义是指存取速度比一般随机存取记忆体（RAM）来得快的一种RAM，一般而言它不像系统主记忆体那样使用DRAM技术，而使用昂贵但较快速的SRAM技术，也有快取记忆体的名称。"]}, "虚拟存储器": {"key": ["虚拟存储器"], "property": ["type"], "to_name": ["存储系统"], "重要程度": [4], "所属章节": [4], "知识点描述": ["在虚存管理中，虚拟地址空间是指逻辑地址空间，实地址空间是指物理地址空间；前者的大小受机器的指令地址长度的限制，而后者的大小受物理内存大小的限制。"]}, "输入输出系统": {"key": ["输入输出系统"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [4], "所属章节": [1], "知识点描述": ["输入输出系统是计算机系统中的主机与外部进行通信的系统。它由外围设备和输入输出控制系统两部分组成，是计算机系统的重要组成部分。"]}, "I/O接口": {"key": ["I/O接口"], "property": ["subclassof"], "to_name": ["输入输出系统"], "重要程度": [4], "所属章节": [5], "知识点描述": ["lO 接口是主机与被控对象进行信息交换的纽带。主机通过I/O 接口与外部设备进行数据交换。绝大部分I/O 接口电路都是可编程的，即它们的工作方式可由程序进行控制。"]}, "I/O方式": {"key": ["I/O方式"], "property": ["subclassof"], "to_name": ["输入输出系统"], "重要程度": [4], "所属章节": [5], "知识点描述": ["I/O控制方式主要有程序查询方bai式、中du断方式、DMA方式和I/O通道控制方式。"]}, "外部设备": {"key": ["外部设备"], "property": ["subclassof"], "to_name": ["输入输出系统"], "重要程度": [3], "所属章节": [4], "知识点描述": ["简称“外设”。计算机系统中输入、输出设备（包括外存储器）的统称。对数据和信息起着传输、转送和存储的作用。是计算机系统中的重要组成部分。 外围设备涉及到主机以外的任何设备。外围设备是附属的或辅助的与计算机连接起来的设备。外围设备能扩充计算机系统。"]}, "内部接口": {"key": ["内部接口"], "property": ["type"], "to_name": ["I/O接口"], "重要程度": [4], "所属章节": [5], "知识点描述": ["对自身系统提供的接口（供系统内部调用的接口）"]}, "外部接口": {"key": ["外部接口"], "property": ["type"], "to_name": ["I/O接口"], "重要程度": [4], "所属章节": [5], "知识点描述": ["对外部提供的接口（提供给第三方使用的接口)"]}, "通道": {"key": ["通道"], "property": ["type"], "to_name": ["I/O方式"], "重要程度": [3], "所属章节": [5], "知识点描述": ["经常用于大型计算机的控制方式是通道方式。通道方式，即能够根据程序控制多个外部设备并提供了DMA共享的功能，而DMA只能进行固定的数据传输操作。根据数据传送方式，通道可分成字节多路通道、选择通道和数组多路通道三种类型"]}, "程序中断": {"key": ["程序中断"], "property": ["type"], "to_name": ["I/O方式"], "重要程度": [3], "所属章节": [5], "知识点描述": ["程序中断是指计算机执行现行程序的过程中，出现某些急需处理的异常情况和特殊请求，cpu暂时终止现行程序，而转去对随机发生的更紧迫的事件进行处理，在处理完毕后，cpu将自动返回原来的程序继续执行。"]}, "程序查询": {"key": ["程序查询"], "property": ["type"], "to_name": ["I/O方式"], "重要程度": [3], "所属章节": [5], "知识点描述": ["程序查询方式是一种程序直接控制方式,这是主机与外设间进行信息交换的最简单的方式,输入和输出完全是通过CPU执行程序来完成的。"]}, "DMA": {"key": ["DMA"], "property": ["type"], "to_name": ["I/O方式"], "重要程度": [4], "所属章节": [5], "知识点描述": ["DMA(Direct Memory Access，直接存储器访问) 是所有现代电脑的重要特色，它允许不同速度的硬件装置来沟通，而不需要依赖于 CPU 的大量中断负载。否则，CPU 需要从来源把每一片段的资料复制到暂存器，然后把它们再次写回到新的地方。在这个时间中，CPU 对于其他的工作来说就无法使用。"]}, "输入设备": {"key": ["输入设备"], "property": ["subclassof"], "to_name": ["外部设备"], "重要程度": [3], "所属章节": [5], "知识点描述": ["输入设备：向计算机输入数据和信息的设备。是计算机与用户或其他设备通信的桥梁。输入设备是用户和计算机系统之间进行信息交换的主要装置之一。"]}, "外存储器": {"key": ["外存储器"], "property": ["subclassof"], "to_name": ["外部设备"], "重要程度": [3], "所属章节": [4], "知识点描述": ["外储存器是指除计算机内存及CPU缓存以外的储存器，此类储存器一般断电后仍然能保存数据。常见的外存储器有硬盘、软盘、光盘、U盘等。"]}, "输出设备": {"key": ["输出设备"], "property": ["subclassof"], "to_name": ["外部设备"], "重要程度": [3], "所属章节": [5], "知识点描述": ["输出设备（Output Device）是计算机硬件系统的终端设备，用于接收计算机数据的输出显示、打印、声音、控制外围设备操作等。也是把各种计算结果数据或信息以数字、字符、图像、声音等形式表现出来。常见的输出设备有显示器、打印机、绘图仪、影像输出系统、语音输出系统、磁记录设备等。"]}, "鼠标": {"key": ["鼠标"], "property": ["subclassof"], "to_name": ["输入设备"], "重要程度": [3], "所属章节": [5], "知识点描述": ["鼠标，计算机的一种外接输入设备，也是计算机显示系统纵横坐标定位的指示器，因形似老鼠而得名（港台作滑鼠）。"]}, "键盘": {"key": ["键盘"], "property": ["subclassof"], "to_name": ["输入设备"], "重要程度": [3], "所属章节": [5], "知识点描述": ["键盘是用于操作设备运行的一种指令和数据输入装置，也指经过系统安排操作一台机器或设备的一组功能键（如打字机、电脑键盘）。"]}, "磁盘存储器": {"key": ["磁盘存储器"], "property": ["subclassof"], "to_name": ["外存储器"], "重要程度": [3], "所属章节": [4], "知识点描述": ["磁盘存储器（magnetic disk storage），以磁盘为存储介质的存储器。它是利用磁记录技术在涂有磁记录介质的旋转圆盘上进行数据存储的辅助存储器。具有存储容量大、数据传输率高、存储数据可长期保存等特点。"]}, "打印机": {"key": ["打印机"], "property": ["subclassof"], "to_name": ["输出设备"], "重要程度": [3], "所属章节": [5], "知识点描述": ["打印机（Printer) 是计算机的输出设备之一，用于将计算机处理结果打印在相关介质上。"]}, "显示器": {"key": ["显示器"], "property": ["subclassof"], "to_name": ["输出设备"], "重要程度": [3], "所属章节": [5], "知识点描述": ["显示器（display）通常也被称为监视器。显示器是属于电脑的I/O设备，即输入输出设备。它是一种将一定的电子文件通过特定的传输设备显示到屏幕上再反射到人眼的显示工具。"]}, "总线": {"key": ["总线"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [4], "所属章节": [3], "知识点描述": ["总线（Bus）是计算机各种功能部件之间传送信息的公共通信干线，它是由导线组成的传输线束， 按照计算机所传输的信息种类，计算机的总线可以划分为数据总线、地址总线和控制总线，分别用来传输数据、数据地址和控制信号。"]}, "总线操作和定时": {"key": ["总线操作和定时"], "property": ["subclassof"], "to_name": ["总线"], "重要程度": [2], "所属章节": [3], "知识点描述": ["总线定时：总线在双方交换数据的过程中需要时间上配合关系的控制。这种关系称为总线定时。实质是一种协议或规则。有同步与异步两种。"]}, "总线仲裁": {"key": ["总线仲裁"], "property": ["subclassof"], "to_name": ["总线"], "重要程度": [2], "所属章节": [3], "知识点描述": ["系统中多个设备或模块可能同时申请对总线的使用权，为避免产生总线冲突，需由总线仲裁机构合理地控制和管理系统中需要占用总线的申请者，在多个申请者同时提出总线请求时，以一定的优先算法仲裁哪个应获得对总线的使用权。"]}, "总线标准": {"key": ["总线标准"], "property": ["subclassof"], "to_name": ["总线"], "重要程度": [2], "所属章节": [3], "知识点描述": ["总线标准是系统与各模块、模块与模块之间的一个互连的标准界面。 "]}, "分布仲裁方式": {"key": ["分布仲裁方式"], "property": ["subclassof"], "to_name": ["总线仲裁"], "重要程度": [2], "所属章节": [3], "知识点描述": ["分布仲裁方式不需要中央仲裁器，每个潜在的主模块都有自己的仲裁号和仲裁器。当它们有总线请求时，就会把它们各自唯一的仲裁号发送到共享的仲裁总线上，每个仲裁器从仲裁总线上得到的仲裁号与自己的仲裁号比较。若仲裁总线上的仲裁号优先级高，则它的总线请求不予响应，并撤销它的仲裁号。最后，获胜者的仲裁号保留在仲裁总线上"]}, "集中仲裁方式": {"key": ["集中仲裁方式"], "property": ["subclassof"], "to_name": ["总线仲裁"], "重要程度": [2], "所属章节": [3], "知识点描述": ["将所有的总线请求集中起来，利用一个特定的裁决算法进行裁决，基本由 CPU 进行处理。集中仲裁又可分为链式查询方式、计数器定时查询方式和独立请求方式三种"]}, "独立请求": {"key": ["独立请求"], "property": ["type"], "to_name": ["集中仲裁方式"], "重要程度": [2], "所属章节": [3], "知识点描述": ["每个设备都有一对总线请求线和总线允许线，当部件需要使用总线时，经各自的总线请求线向总线控制器发送总线请求信号，在控制器中排队，总线控制器按一定的优先次序决定批准某个部件的请求，并经该部件的总线允许线向该部件发送总线响应信号，将总线控制器交给该部件。"]}, "计数器定时查询": {"key": ["计数器定时查询"], "property": ["type"], "to_name": ["集中仲裁方式"], "重要程度": [2], "所属章节": [3], "知识点描述": ["采用一个计数器来控制总线使用权，因此增加了一组设备地址线，少了总线响应线，仍是共有一根总线请求线。工作原理如下，当总线控制器收到总线请求信号并判断总线空闲时，计数器开始计数，计数值通过设备地址线发向各个部件，当地址线上的计数值与请求使用总线设备的地址一致时，该设备获得总线控制权，同时中止计数器的计数及查询。"]}, "链式查询": {"key": ["链式查询"], "property": ["type"], "to_name": ["集中仲裁方式"], "重要程度": [2], "所属章节": [3], "知识点描述": ["总线上所有的部件共用一根总线请求线，当有部件请求使用总线时，需经此线发总线请求信号到总线控制器，总线控制器便查询总线是否忙碌，如不忙碌便立即发总线响应信号到 BG 线串行地从一个部件传送到下一个部件，依次查询，直到某个部件有总线请求便不再传下去。"]}, "中央处理器": {"key": ["中央处理器"], "property": ["subclassof"], "to_name": ["name"], "重要程度": [4], "所属章节": [8], "知识点描述": ["中央处理器（CPU，central processing unit）作为计算机系统的运算和控制核心，是信息处理、程序运行的最终执行单元。"]}, "CPU功能": {"key": ["CPU功能"], "property": ["subclassof"], "to_name": ["中央处理器"], "重要程度": [4], "所属章节": [8], "知识点描述": ["功能主要是解释计算机指令以及处理计算机软件中的数据"]}, "指令执行过程": {"key": ["指令执行过程"], "property": ["subclassof"], "to_name": ["中央处理器"], "重要程度": [2], "所属章节": [9], "知识点描述": [NaN]}, "基本构成": {"key": ["基本构成"], "property": ["subclassof"], "to_name": ["中央处理器"], "重要程度": [4], "所属章节": [8], "知识点描述": [NaN]}, "操作控制": {"key": ["操作控制"], "property": ["type"], "to_name": ["CPU功能"], "重要程度": [4], "所属章节": [8], "知识点描述": [NaN]}, "中断处理": {"key": ["中断处理"], "property": ["type"], "to_name": ["CPU功能"], "重要程度": [4], "所属章节": [8], "知识点描述": ["当CPU（中央处理器）执行一条现行指令的时候，如果外设向CPU发出中断请求，那么CPU在满足响应的情况下，将发出中断响应信号，与此同时关闭中断，表示CPU不在受理另外一个设备的中断。这时，CPU将寻找中断请求源是哪一个设备，并保存CPU自己的程序计数器（PC）的内容。然后，他将转移到处理该中断源的中断服务程序。CPU在保存现场信息，设备服务（如交换数据）以后，将恢复现场信息。在这些动作完成以后，开放中断，并返回到原来被中断的主程序的下一条指令。"]}, "指令控制": {"key": ["指令控制"], "property": ["type"], "to_name": ["CPU功能"], "重要程度": [4], "所属章节": [8], "知识点描述": [NaN]}, "数据加工": {"key": ["数据加工"], "property": ["type"], "to_name": ["CPU功能"], "重要程度": [2], "所属章节": [8], "知识点描述": [NaN]}, "时间控制": {"key": ["时间控制"], "property": ["type"], "to_name": ["CPU功能"], "重要程度": [2], "所属章节": [8], "知识点描述": [NaN]}, "取指": {"key": ["取指"], "property": ["subclassof"], "to_name": ["指令执行过程"], "重要程度": [2], "所属章节": [9], "知识点描述": ["取指令（Instruction Fetch，IF）阶段是将一条指令从主存中取到指令寄存器的过程。"]}, "分析": {"key": ["分析"], "property": ["subclassof"], "to_name": ["指令执行过程"], "重要程度": [2], "所属章节": [9], "知识点描述": ["将指令寄存器中的指令操作码取出后进行译码，分析其指令性质。如指令要求操作数，则寻找操作数地址。"]}, "执行": {"key": ["执行"], "property": ["subclassof"], "to_name": ["指令执行过程"], "重要程度": [2], "所属章节": [9], "知识点描述": ["此阶段的任务是完成指令所规定的各种操作，具体实现指令的功能。"]}, "控制器": {"key": ["控制器"], "property": ["subclassof"], "to_name": ["基本构成"], "重要程度": [4], "所属章节": [8], "知识点描述": ["控制器（英文名称：controller）是指按照预定顺序改变主电路或控制电路的接线和改变电路中电阻值来控制电动机的启动、调速、制动和反向的主令装置。由程序计数器、指令寄存器、指令译码器、时序产生器和操作控制器组成，它是发布命令的“决策机构”，即完成协调和指挥整个计算机系统的操作。"]}, "运算器": {"key": ["运算器"], "property": ["subclassof"], "to_name": ["基本构成"], "重要程度": [4], "所属章节": [8], "知识点描述": ["计算机中执行各种算术和逻辑运算操作的部件。运算器的基本操作包括加、减、乘、除四则运算，与、或、非、异或等逻辑操作，以及移位、比较和传送等操作，亦称算术逻辑部件（ALU）。"]}}